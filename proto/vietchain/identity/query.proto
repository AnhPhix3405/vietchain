syntax = "proto3";

package vietchain.identity;

import "amino/amino.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "vietchain/identity/params.proto";
import "vietchain/identity/identity.proto";

option go_package = "VietChain/x/identity/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/VietChain/identity/params";
  }
  
  // Queries a Identity by address.
  rpc Identity(QueryGetIdentityRequest) returns (QueryGetIdentityResponse) {
    option (google.api.http).get = "/VietChain/identity/identity/{address}";
  }
  
  // Queries a list of Identity items.
  rpc IdentityAll(QueryAllIdentityRequest) returns (QueryAllIdentityResponse) {
    option (google.api.http).get = "/VietChain/identity/identity";
  }
  
  // Queries Identity by CCCD ID hash
  rpc IdentityByCccdId(QueryIdentityByCccdIdRequest) returns (QueryIdentityByCccdIdResponse) {
    option (google.api.http).get = "/VietChain/identity/identity-by-cccd/{idHash}";
  }
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

message QueryGetIdentityRequest {
  string address = 1;
}

message QueryGetIdentityResponse {
  Identity identity = 1 [(gogoproto.nullable) = false];
}

message QueryAllIdentityRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllIdentityResponse {
  repeated Identity identity = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryIdentityByCccdIdRequest {
  string idHash = 1;
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

message QueryIdentityByCccdIdResponse {
  repeated Identity identity = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
